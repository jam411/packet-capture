{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1","program":"/Users/ryojisimizu/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","pnet_datalink","/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","-C","metadata=941b39e75ddec1b8","-C","extra-filename=-941b39e75ddec1b8","--out-dir","/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps","-L","dependency=/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps","--extern","ipnetwork=/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps/libipnetwork-9832a7a28750f6d2.rmeta","--extern","libc=/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps/liblibc-b0164978dc8d3241.rmeta","--extern","pnet_base=/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps/libpnet_base-bccb53f1243224cb.rmeta","--extern","pnet_sys=/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps/libpnet_sys-4b4b8e1c67975318.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/Users/ryojisimizu/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/ryojisimizu/rust/networkprogramming/packet-capture/target/rls/debug/deps/libpnet_datalink-941b39e75ddec1b8.rmeta"},"prelude":{"crate_id":{"name":"pnet_datalink","disambiguator":[4516607106569947158,500834248360667158]},"crate_root":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src","external_crates":[{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[14497711731351875891,7574154950596153320]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[17161976177339802527,9637120080719870273]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[12784072134307519025,4657485898025748013]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[8860544973196061204,9932137894390183628]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15484098214765895148,4360652648143560453]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[13802683045354889200,17279120461159080731]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[13733846401634403672,16568137600355934567]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[5926527291982439463,7261863668131194074]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[2147386378482378397,1448349958257004752]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8504510625746843556,11549570195915831773]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1145582961014725186,16562354883654090131]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[6582153069738696943,14519107576634371424]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[15498041504304623936,9266600846380482125]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[12608136573466536856,1503974727608604885]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[16755883997827362908,2889333423780235391]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":16,"id":{"name":"panic_unwind","disambiguator":[3009561993154964965,13259943199418826037]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":17,"id":{"name":"ipnetwork","disambiguator":[11039269719304045464,16402589236284448805]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":18,"id":{"name":"serde","disambiguator":[16749947403076049389,3728876626451434260]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":19,"id":{"name":"libc","disambiguator":[10187834896491058371,4424785391820360193]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":20,"id":{"name":"pnet_base","disambiguator":[6652039711107428752,13107850063089517734]}},{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","num":21,"id":{"name":"pnet_sys","disambiguator":[8725401596894360326,11286226933975459871]}}],"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":375,"byte_end":9510,"line_start":9,"line_end":316,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":20,"index":48},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":641,"byte_end":648,"line_start":22,"line_end":22,"column_start":21,"column_end":28},"alias_span":null,"name":"MacAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":49},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":641,"byte_end":648,"line_start":22,"line_end":22,"column_start":21,"column_end":28},"alias_span":null,"name":"MacAddr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":20,"index":75},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":650,"byte_end":665,"line_start":22,"line_end":22,"column_start":30,"column_end":45},"alias_span":null,"name":"ParseMacAddrErr","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":375,"byte_end":9510,"line_start":9,"line_end":316,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":77},{"krate":0,"index":200},{"krate":0,"index":323},{"krate":0,"index":379},{"krate":0,"index":457},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":380},{"krate":0,"index":478},{"krate":0,"index":495},{"krate":0,"index":497},{"krate":0,"index":498},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":509},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":522},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":537},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":545},{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":552},{"krate":0,"index":558},{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":564},{"krate":0,"index":565},{"krate":0,"index":567},{"krate":0,"index":569},{"krate":0,"index":395},{"krate":0,"index":402},{"krate":0,"index":407}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets.\n","sig":null,"attributes":[{"value":"/ Support for sending and receiving data link layer packets.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":375,"byte_end":437,"line_start":9,"line_end":9,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":200},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bpf","qualname":"::bpf","value":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":209},{"krate":0,"index":212},{"krate":0,"index":215},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":227},{"krate":0,"index":230},{"krate":0,"index":233},{"krate":0,"index":236},{"krate":0,"index":239},{"krate":0,"index":429},{"krate":0,"index":435},{"krate":0,"index":437},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":240},{"krate":0,"index":243},{"krate":0,"index":245},{"krate":0,"index":250},{"krate":0,"index":256},{"krate":0,"index":261},{"krate":0,"index":268},{"krate":0,"index":271}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets using the /dev/bpf device.\n","sig":null,"attributes":[{"value":"cfg(any(target_os = \"freebsd\", target_os = \"macos\"))","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1219,"byte_end":1274,"line_start":54,"line_end":54,"column_start":1,"column_end":56}},{"value":"/ Support for sending and receiving data link layer packets using the /dev/bpf device.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":14446,"byte_end":14534,"line_start":9,"line_end":9,"column_start":1,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":429},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":14932,"byte_end":14938,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Config","qualname":"::bpf::Config","value":"Config { write_buffer_size, read_buffer_size, read_timeout, write_timeout, bpf_fd_attempts }","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"decl_id":null,"docs":" The BPF-specific configuration.\n","sig":null,"attributes":[{"value":"/ The BPF-specific configuration.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":14834,"byte_end":14869,"line_start":29,"line_end":29,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":430},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15023,"byte_end":15040,"line_start":33,"line_end":33,"column_start":9,"column_end":26},"name":"write_buffer_size","qualname":"::bpf::Config::write_buffer_size","value":"usize","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" The size of buffer to use when writing packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when writing packets. Defaults to 4096.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":14945,"byte_end":15014,"line_start":32,"line_end":32,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":431},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15132,"byte_end":15148,"line_start":36,"line_end":36,"column_start":9,"column_end":25},"name":"read_buffer_size","qualname":"::bpf::Config::read_buffer_size","value":"usize","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" The size of buffer to use when reading packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when reading packets. Defaults to 4096.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15054,"byte_end":15123,"line_start":35,"line_end":35,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":432},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15210,"byte_end":15222,"line_start":39,"line_end":39,"column_start":9,"column_end":21},"name":"read_timeout","qualname":"::bpf::Config::read_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" The read timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ The read timeout. Defaults to None.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15162,"byte_end":15201,"line_start":38,"line_end":38,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":433},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15296,"byte_end":15309,"line_start":42,"line_end":42,"column_start":9,"column_end":22},"name":"write_timeout","qualname":"::bpf::Config::write_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" The write timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ The write timeout. Defaults to None.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15247,"byte_end":15287,"line_start":41,"line_end":41,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":434},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15603,"byte_end":15618,"line_start":50,"line_end":50,"column_start":9,"column_end":24},"name":"bpf_fd_attempts","qualname":"::bpf::Config::bpf_fd_attempts","value":"usize","parent":{"krate":0,"index":429},"children":[],"decl_id":null,"docs":" The number of /dev/bpf* file descriptors to attempt before failing.","sig":null,"attributes":[{"value":"/ The number of /dev/bpf* file descriptors to attempt before failing.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15334,"byte_end":15405,"line_start":44,"line_end":44,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15410,"byte_end":15413,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ This setting is only used on OS X - FreeBSD uses a single /dev/bpf rather than creating a","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15418,"byte_end":15511,"line_start":46,"line_end":46,"column_start":5,"column_end":98}},{"value":"/ new descriptor each time one is opened.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15516,"byte_end":15559,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15564,"byte_end":15567,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Defaults to: 1000.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15572,"byte_end":15594,"line_start":49,"line_end":49,"column_start":5,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":245},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16395,"byte_end":16402,"line_start":80,"line_end":80,"column_start":8,"column_end":15},"name":"channel","qualname":"::bpf::channel","value":"pub fn channel(&NetworkInterface, Config) -> io::Result<super::Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a datalink channel using the /dev/bpf device\n","sig":null,"attributes":[{"value":"/ Create a datalink channel using the /dev/bpf device","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16285,"byte_end":16340,"line_start":77,"line_end":77,"column_start":1,"column_end":56}},{"value":"inline","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16378,"byte_end":16387,"line_start":79,"line_end":79,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":271},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":28564,"byte_end":28574,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::bpf::interfaces","value":"pub fn interfaces() -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of available network interfaces for the current machine.\n","sig":null,"attributes":[{"value":"/ Get a list of available network interfaces for the current machine.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":28485,"byte_end":28556,"line_start":403,"line_end":403,"column_start":1,"column_end":72}}]},{"kind":"Mod","id":{"krate":0,"index":323},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dummy","qualname":"::dummy","value":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","parent":null,"children":[{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":334},{"krate":0,"index":337},{"krate":0,"index":340},{"krate":0,"index":341},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":350},{"krate":0,"index":353},{"krate":0,"index":450},{"krate":0,"index":455},{"krate":0,"index":356},{"krate":0,"index":360},{"krate":0,"index":363},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":371},{"krate":0,"index":374},{"krate":0,"index":376},{"krate":0,"index":378}],"decl_id":null,"docs":" Support for sending and receiving data link layer packets on a fake network managed\n by in memory FIFO queues. Useful for writing tests.\n","sig":null,"attributes":[{"value":"/ Support for sending and receiving data link layer packets on a fake network managed","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34229,"byte_end":34316,"line_start":9,"line_end":9,"column_start":1,"column_end":88}},{"value":"/ by in memory FIFO queues. Useful for writing tests.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34317,"byte_end":34372,"line_start":10,"line_end":10,"column_start":1,"column_end":56}}]},{"kind":"Struct","id":{"krate":0,"index":450},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34705,"byte_end":34711,"line_start":22,"line_end":22,"column_start":12,"column_end":18},"name":"Config","qualname":"::dummy::Config","value":"Config {  }","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452},{"krate":0,"index":453},{"krate":0,"index":454}],"decl_id":null,"docs":" Configuration for the dummy datalink backend. Contains `std::sync::mpsc`\n channels that are used to communicate with the fake network.\n","sig":null,"attributes":[{"value":"/ Configuration for the dummy datalink backend. Contains `std::sync::mpsc`","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34535,"byte_end":34611,"line_start":19,"line_end":19,"column_start":1,"column_end":77}},{"value":"/ channels that are used to communicate with the fake network.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34612,"byte_end":34676,"line_start":20,"line_end":20,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35637,"byte_end":35640,"line_start":42,"line_end":42,"column_start":12,"column_end":15},"name":"new","qualname":"<Config>::new","value":"pub fn new(Receiver<io::Result<Box<[u8]>>>, Sender<Box<[u8]>>) -> Config","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Config` with the given channels as the backing network.\n When using this constructor `inject_handle` and `read_handle` will return `None`.\n Those handles must be kept track of elsewhere.","sig":null,"attributes":[{"value":"/ Creates a new `Config` with the given channels as the backing network.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34918,"byte_end":34992,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ When using this constructor `inject_handle` and `read_handle` will return `None`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34997,"byte_end":35082,"line_start":32,"line_end":32,"column_start":5,"column_end":90}},{"value":"/ Those handles must be kept track of elsewhere.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35087,"byte_end":35137,"line_start":33,"line_end":33,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35142,"byte_end":35145,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The `DataLinkReceiver` created by the dummy backend will read packets from","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35150,"byte_end":35228,"line_start":35,"line_end":35,"column_start":5,"column_end":83}},{"value":"/ `receiver`. Both network errors and data can be sent on this channel.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35233,"byte_end":35306,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ When the `receiver` channel is closed (`Sender` is dropped)","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35311,"byte_end":35374,"line_start":37,"line_end":37,"column_start":5,"column_end":68}},{"value":"/ `DataLinkReceiver::next()` will sleep forever, simlating an idle network.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35379,"byte_end":35456,"line_start":38,"line_end":38,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35461,"byte_end":35464,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ The `DataLinkSender` created by the dummy backend will send all packets sent","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35469,"byte_end":35549,"line_start":40,"line_end":40,"column_start":5,"column_end":85}},{"value":"/ through `build_and_send()` and `send_to()` to the `sender` channel.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35554,"byte_end":35625,"line_start":41,"line_end":41,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":358},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36032,"byte_end":36045,"line_start":53,"line_end":53,"column_start":12,"column_end":25},"name":"inject_handle","qualname":"<Config>::inject_handle","value":"pub fn inject_handle(&mut Self) -> Option<Sender<io::Result<Box<[u8]>>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the `Sender` handle that can inject packets in the fake network.\n Only usable with `Config`s generated from `default()`.\n","sig":null,"attributes":[{"value":"/ Get the `Sender` handle that can inject packets in the fake network.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35885,"byte_end":35957,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ Only usable with `Config`s generated from `default()`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":35962,"byte_end":36020,"line_start":52,"line_end":52,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":359},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36301,"byte_end":36312,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"read_handle","qualname":"<Config>::read_handle","value":"pub fn read_handle(&mut Self) -> Option<Receiver<Box<[u8]>>>","parent":null,"children":[],"decl_id":null,"docs":" Get the `Receiver` handle where packets sent to the fake network can be read.\n Only usable with `Config`s generated from `default()`.\n","sig":null,"attributes":[{"value":"/ Get the `Receiver` handle where packets sent to the fake network can be read.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36145,"byte_end":36226,"line_start":57,"line_end":57,"column_start":5,"column_end":86}},{"value":"/ Only usable with `Config`s generated from `default()`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36231,"byte_end":36289,"line_start":58,"line_end":58,"column_start":5,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":365},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":37305,"byte_end":37312,"line_start":88,"line_end":88,"column_start":8,"column_end":15},"name":"channel","qualname":"::dummy::channel","value":"pub fn channel(&NetworkInterface, Config) -> io::Result<super::Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a data link channel backed by FIFO queues. Useful for debugging and testing.\n See `Config` for how to inject and read packets on this fake network.\n","sig":null,"attributes":[{"value":"/ Create a data link channel backed by FIFO queues. Useful for debugging and testing.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":37136,"byte_end":37223,"line_start":86,"line_end":86,"column_start":1,"column_end":88}},{"value":"/ See `Config` for how to inject and read packets on this fake network.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":37224,"byte_end":37297,"line_start":87,"line_end":87,"column_start":1,"column_end":74}}]},{"kind":"Function","id":{"krate":0,"index":376},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39748,"byte_end":39758,"line_start":160,"line_end":160,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::dummy::interfaces","value":"pub fn interfaces() -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get three fake interfaces generated with `dummy_interface(0..3)`.\n","sig":null,"attributes":[{"value":"/ Get three fake interfaces generated with `dummy_interface(0..3)`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39671,"byte_end":39740,"line_start":159,"line_end":159,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":378},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":40028,"byte_end":40043,"line_start":168,"line_end":168,"column_start":8,"column_end":23},"name":"dummy_interface","qualname":"::dummy::dummy_interface","value":"pub fn dummy_interface(u8) -> NetworkInterface","parent":null,"children":[],"decl_id":null,"docs":" Generates a fake `NetworkInterface`.\n The name of the interface will be `ethX` where X is the integer `i`.\n The index will be `i`.\n The MAC will be `01:02:03:04:05:i`.\n","sig":null,"attributes":[{"value":"/ Generates a fake `NetworkInterface`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39840,"byte_end":39880,"line_start":164,"line_end":164,"column_start":1,"column_end":41}},{"value":"/ The name of the interface will be `ethX` where X is the integer `i`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39881,"byte_end":39953,"line_start":165,"line_end":165,"column_start":1,"column_end":73}},{"value":"/ The index will be `i`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39954,"byte_end":39980,"line_start":166,"line_end":166,"column_start":1,"column_end":27}},{"value":"/ The MAC will be `01:02:03:04:05:i`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":39981,"byte_end":40020,"line_start":167,"line_end":167,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":379},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1496,"byte_end":1505,"line_start":70,"line_end":70,"column_start":10,"column_end":19},"name":"EtherType","qualname":"::EtherType","value":"u16","parent":null,"children":[],"decl_id":null,"docs":" Type alias for an `EtherType`.\n","sig":null,"attributes":[{"value":"/ Type alias for an `EtherType`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1452,"byte_end":1486,"line_start":69,"line_end":69,"column_start":1,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":458},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1717,"byte_end":1723,"line_start":76,"line_end":76,"column_start":5,"column_end":11},"name":"Layer2","qualname":"::ChannelType::Layer2","value":"ChannelType::Layer2","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":" Send and receive layer 2 packets directly, including headers.\n","sig":null,"attributes":[{"value":"/ Send and receive layer 2 packets directly, including headers.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1647,"byte_end":1712,"line_start":75,"line_end":75,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":460},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1813,"byte_end":1819,"line_start":78,"line_end":78,"column_start":5,"column_end":11},"name":"Layer3","qualname":"::ChannelType::Layer3","value":"ChannelType::Layer3(EtherType)","parent":{"krate":0,"index":457},"children":[],"decl_id":null,"docs":" Send and receive \"cooked\" packets - send and receive network layer packets.\n","sig":null,"attributes":[{"value":"/ Send and receive \"cooked\" packets - send and receive network layer packets.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1729,"byte_end":1808,"line_start":77,"line_end":77,"column_start":5,"column_end":84}}]},{"kind":"Enum","id":{"krate":0,"index":457},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1629,"byte_end":1640,"line_start":74,"line_end":74,"column_start":10,"column_end":21},"name":"ChannelType","qualname":"::ChannelType","value":"pub enum ChannelType { Layer2, Layer3(EtherType), }","parent":null,"children":[{"krate":0,"index":458},{"krate":0,"index":460}],"decl_id":null,"docs":" Type of data link channel to present (Linux only).\n","sig":null,"attributes":[{"value":"/ Type of data link channel to present (Linux only).","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1514,"byte_end":1568,"line_start":72,"line_end":72,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":381},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2313,"byte_end":2321,"line_start":94,"line_end":94,"column_start":5,"column_end":13},"name":"Ethernet","qualname":"::Channel::Ethernet","value":"Channel::Ethernet(Box<dyn DataLinkSender>, Box<dyn DataLinkReceiver>)","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" A datalink channel which sends and receives Ethernet packets.\n","sig":null,"attributes":[{"value":"/ A datalink channel which sends and receives Ethernet packets.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2243,"byte_end":2308,"line_start":93,"line_end":93,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":385},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2529,"byte_end":2580,"line_start":99,"line_end":99,"column_start":5,"column_end":56},"name":"PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","qualname":"::Channel::PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","value":"Channel::PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum","parent":{"krate":0,"index":380},"children":[],"decl_id":null,"docs":" This variant should never be used.","sig":null,"attributes":[{"value":"/ This variant should never be used.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2380,"byte_end":2418,"line_start":96,"line_end":96,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2423,"byte_end":2426,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ Including it allows new variants to be added to `Channel` without breaking existing code.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2431,"byte_end":2524,"line_start":98,"line_end":98,"column_start":5,"column_end":98}}]},{"kind":"Enum","id":{"krate":0,"index":380},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2229,"byte_end":2236,"line_start":92,"line_end":92,"column_start":10,"column_end":17},"name":"Channel","qualname":"::Channel","value":"pub enum Channel {\n    Ethernet(Box<dyn DataLinkSender>, Box<dyn DataLinkReceiver>),\n    PleaseIncludeACatchAllVariantWhenMatchingOnThisEnum,\n}","parent":null,"children":[{"krate":0,"index":381},{"krate":0,"index":385}],"decl_id":null,"docs":" A channel for sending and receiving at the data link layer.","sig":null,"attributes":[{"value":"/ A channel for sending and receiving at the data link layer.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1835,"byte_end":1898,"line_start":81,"line_end":81,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1899,"byte_end":1902,"line_start":82,"line_end":82,"column_start":1,"column_end":4}},{"value":"/ NOTE: It is important to always include a catch-all variant in match statements using this","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1903,"byte_end":1997,"line_start":83,"line_end":83,"column_start":1,"column_end":95}},{"value":"/ enum, since new variants may be added. For example:","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1998,"byte_end":2053,"line_start":84,"line_end":84,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2054,"byte_end":2057,"line_start":85,"line_end":85,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2058,"byte_end":2071,"line_start":86,"line_end":86,"column_start":1,"column_end":14}},{"value":"/ match some_channel {","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2072,"byte_end":2096,"line_start":87,"line_end":87,"column_start":1,"column_end":25}},{"value":"/     Ethernet(tx, rx) => { /* Handle Ethernet packets */ },","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2097,"byte_end":2159,"line_start":88,"line_end":88,"column_start":1,"column_end":63}},{"value":"/     _ => panic!(\"Unhandled channel type\")","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2160,"byte_end":2205,"line_start":89,"line_end":89,"column_start":1,"column_end":46}},{"value":"/ }","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2206,"byte_end":2211,"line_start":90,"line_end":90,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2212,"byte_end":2219,"line_start":91,"line_end":91,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":479},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2699,"byte_end":2703,"line_start":105,"line_end":105,"column_start":5,"column_end":9},"name":"HASH","qualname":"::FanoutType::HASH","value":"FanoutType::HASH","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":481},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2709,"byte_end":2711,"line_start":106,"line_end":106,"column_start":5,"column_end":7},"name":"LB","qualname":"::FanoutType::LB","value":"FanoutType::LB","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":483},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2717,"byte_end":2720,"line_start":107,"line_end":107,"column_start":5,"column_end":8},"name":"CPU","qualname":"::FanoutType::CPU","value":"FanoutType::CPU","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":485},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2726,"byte_end":2734,"line_start":108,"line_end":108,"column_start":5,"column_end":13},"name":"ROLLOVER","qualname":"::FanoutType::ROLLOVER","value":"FanoutType::ROLLOVER","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":487},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2740,"byte_end":2743,"line_start":109,"line_end":109,"column_start":5,"column_end":8},"name":"RND","qualname":"::FanoutType::RND","value":"FanoutType::RND","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":489},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2749,"byte_end":2751,"line_start":110,"line_end":110,"column_start":5,"column_end":7},"name":"QM","qualname":"::FanoutType::QM","value":"FanoutType::QM","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2757,"byte_end":2761,"line_start":111,"line_end":111,"column_start":5,"column_end":9},"name":"CBPF","qualname":"::FanoutType::CBPF","value":"FanoutType::CBPF","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":493},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2767,"byte_end":2771,"line_start":112,"line_end":112,"column_start":5,"column_end":9},"name":"EBPF","qualname":"::FanoutType::EBPF","value":"FanoutType::EBPF","parent":{"krate":0,"index":478},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":478},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2682,"byte_end":2692,"line_start":104,"line_end":104,"column_start":10,"column_end":20},"name":"FanoutType","qualname":"::FanoutType","value":"pub enum FanoutType { HASH, LB, CPU, ROLLOVER, RND, QM, CBPF, EBPF, }","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":481},{"krate":0,"index":483},{"krate":0,"index":485},{"krate":0,"index":487},{"krate":0,"index":489},{"krate":0,"index":491},{"krate":0,"index":493}],"decl_id":null,"docs":" Socket fanout type (Linux only).\n","sig":null,"attributes":[{"value":"/ Socket fanout type (Linux only).","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2585,"byte_end":2621,"line_start":102,"line_end":102,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":509},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2872,"byte_end":2884,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"FanoutOption","qualname":"::FanoutOption","value":"FanoutOption { group_id, fanout_type, defrag, rollover }","parent":null,"children":[{"krate":0,"index":510},{"krate":0,"index":511},{"krate":0,"index":512},{"krate":0,"index":513}],"decl_id":null,"docs":" Fanout settings (Linux only).\n","sig":null,"attributes":[{"value":"/ Fanout settings (Linux only).","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2776,"byte_end":2809,"line_start":115,"line_end":115,"column_start":1,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":510},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2895,"byte_end":2903,"line_start":118,"line_end":118,"column_start":9,"column_end":17},"name":"group_id","qualname":"::FanoutOption::group_id","value":"u16","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":511},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2918,"byte_end":2929,"line_start":119,"line_end":119,"column_start":9,"column_end":20},"name":"fanout_type","qualname":"::FanoutOption::fanout_type","value":"FanoutType","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":512},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2951,"byte_end":2957,"line_start":120,"line_end":120,"column_start":9,"column_end":15},"name":"defrag","qualname":"::FanoutOption::defrag","value":"bool","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":513},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2973,"byte_end":2981,"line_start":121,"line_end":121,"column_start":9,"column_end":17},"name":"rollover","qualname":"::FanoutOption::rollover","value":"bool","parent":{"krate":0,"index":509},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":529},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3271,"byte_end":3277,"line_start":129,"line_end":129,"column_start":12,"column_end":18},"name":"Config","qualname":"::Config","value":"Config { write_buffer_size, read_buffer_size, read_timeout, write_timeout, channel_type, bpf_fd_attempts, linux_fanout }","parent":null,"children":[{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536}],"decl_id":null,"docs":" A generic configuration type, encapsulating all options supported by each backend.","sig":null,"attributes":[{"value":"/ A generic configuration type, encapsulating all options supported by each backend.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":2992,"byte_end":3078,"line_start":124,"line_end":124,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3079,"byte_end":3082,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ Each option should be treated as a hint - each backend is free to ignore any and all","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3083,"byte_end":3171,"line_start":126,"line_end":126,"column_start":1,"column_end":89}},{"value":"/ options which don't apply to it.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3172,"byte_end":3208,"line_start":127,"line_end":127,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":530},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3362,"byte_end":3379,"line_start":131,"line_end":131,"column_start":9,"column_end":26},"name":"write_buffer_size","qualname":"::Config::write_buffer_size","value":"usize","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The size of buffer to use when writing packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when writing packets. Defaults to 4096.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3284,"byte_end":3353,"line_start":130,"line_end":130,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":531},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3471,"byte_end":3487,"line_start":134,"line_end":134,"column_start":9,"column_end":25},"name":"read_buffer_size","qualname":"::Config::read_buffer_size","value":"usize","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" The size of buffer to use when reading packets. Defaults to 4096.\n","sig":null,"attributes":[{"value":"/ The size of buffer to use when reading packets. Defaults to 4096.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3393,"byte_end":3462,"line_start":133,"line_end":133,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":532},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3572,"byte_end":3584,"line_start":137,"line_end":137,"column_start":9,"column_end":21},"name":"read_timeout","qualname":"::Config::read_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Linux/BPF/Netmap only: The read timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ Linux/BPF/Netmap only: The read timeout. Defaults to None.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3501,"byte_end":3563,"line_start":136,"line_end":136,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":533},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3681,"byte_end":3694,"line_start":140,"line_end":140,"column_start":9,"column_end":22},"name":"write_timeout","qualname":"::Config::write_timeout","value":"std::option::Option<std::time::Duration>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Linux/BPF/Netmap only: The write timeout. Defaults to None.\n","sig":null,"attributes":[{"value":"/ Linux/BPF/Netmap only: The write timeout. Defaults to None.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3609,"byte_end":3672,"line_start":139,"line_end":139,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":534},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3844,"byte_end":3856,"line_start":144,"line_end":144,"column_start":9,"column_end":21},"name":"channel_type","qualname":"::Config::channel_type","value":"ChannelType","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" Linux only: Specifies whether to read packets at the datalink layer or network layer.\n Defaults to Layer2\n","sig":null,"attributes":[{"value":"/ Linux only: Specifies whether to read packets at the datalink layer or network layer.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3719,"byte_end":3808,"line_start":142,"line_end":142,"column_start":5,"column_end":94}},{"value":"/ Defaults to Layer2","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3813,"byte_end":3835,"line_start":143,"line_end":143,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":535},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3998,"byte_end":4013,"line_start":148,"line_end":148,"column_start":9,"column_end":24},"name":"bpf_fd_attempts","qualname":"::Config::bpf_fd_attempts","value":"usize","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":" BPF/OS X only: The number of /dev/bpf* file descriptors to attempt before failing. Defaults\n to: 1000.\n","sig":null,"attributes":[{"value":"/ BPF/OS X only: The number of /dev/bpf* file descriptors to attempt before failing. Defaults","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3876,"byte_end":3971,"line_start":146,"line_end":146,"column_start":5,"column_end":100}},{"value":"/ to: 1000.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":3976,"byte_end":3989,"line_start":147,"line_end":147,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":536},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4031,"byte_end":4043,"line_start":150,"line_end":150,"column_start":9,"column_end":21},"name":"linux_fanout","qualname":"::Config::linux_fanout","value":"std::option::Option<FanoutOption>","parent":{"krate":0,"index":529},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":389},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4945,"byte_end":4952,"line_start":179,"line_end":179,"column_start":8,"column_end":15},"name":"channel","qualname":"::channel","value":"pub fn channel(&NetworkInterface, Config) -> io::Result<Channel>","parent":null,"children":[],"decl_id":null,"docs":" Create a new datalink channel for sending and receiving data.","sig":null,"attributes":[{"value":"/ Create a new datalink channel for sending and receiving data.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4413,"byte_end":4478,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4479,"byte_end":4482,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ This allows for sending and receiving packets at the data link layer.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4483,"byte_end":4556,"line_start":169,"line_end":169,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4557,"byte_end":4560,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ A list of network interfaces can be retrieved using datalink::interfaces().","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4561,"byte_end":4640,"line_start":171,"line_end":171,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4641,"byte_end":4644,"line_start":172,"line_end":172,"column_start":1,"column_end":4}},{"value":"/ The configuration serves as a hint to the backend - some or all of it may be used or ignored,","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4645,"byte_end":4742,"line_start":173,"line_end":173,"column_start":1,"column_end":98}},{"value":"/ depending on which backend is used.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4743,"byte_end":4782,"line_start":174,"line_end":174,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4783,"byte_end":4786,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ When matching on the returned channel, make sure to include a catch-all so that code doesn't","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4787,"byte_end":4883,"line_start":176,"line_end":176,"column_start":1,"column_end":97}},{"value":"/ break when new channel types are added.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4884,"byte_end":4927,"line_start":177,"line_end":177,"column_start":1,"column_end":44}},{"value":"inline","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4928,"byte_end":4937,"line_start":178,"line_end":178,"column_start":1,"column_end":10}}]},{"kind":"Trait","id":{"krate":0,"index":390},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5164,"byte_end":5178,"line_start":184,"line_end":184,"column_start":11,"column_end":25},"name":"DataLinkSender","qualname":"::DataLinkSender","value":"DataLinkSender: Send","parent":null,"children":[{"krate":0,"index":391},{"krate":0,"index":392}],"decl_id":null,"docs":" Trait to enable sending `$packet` packets.\n","sig":null,"attributes":[{"value":"/ Trait to enable sending `$packet` packets.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5107,"byte_end":5153,"line_start":183,"line_end":183,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5583,"byte_end":5597,"line_start":192,"line_end":192,"column_start":8,"column_end":22},"name":"build_and_send","qualname":"::DataLinkSender::build_and_send","value":"pub fn build_and_send(&mut Self, usize, usize,\n                      &mut dyn FnMut(&mut [u8]) -> ())\n-> Option<io::Result<()>>","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Create and send a number of packets.","sig":null,"attributes":[{"value":"/ Create and send a number of packets.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5191,"byte_end":5231,"line_start":185,"line_end":185,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5236,"byte_end":5239,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ This will call `func` `num_packets` times. The function will be provided with a","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5244,"byte_end":5327,"line_start":187,"line_end":187,"column_start":5,"column_end":88}},{"value":"/ mutable packet to manipulate, which will then be sent. This allows packets to be","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5332,"byte_end":5416,"line_start":188,"line_end":188,"column_start":5,"column_end":89}},{"value":"/ built in-place, avoiding the copy required for `send`. If there is not sufficient","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5421,"byte_end":5506,"line_start":189,"line_end":189,"column_start":5,"column_end":90}},{"value":"/ capacity in the buffer, None will be returned.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5511,"byte_end":5561,"line_start":190,"line_end":190,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5566,"byte_end":5575,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6013,"byte_end":6020,"line_start":205,"line_end":205,"column_start":8,"column_end":15},"name":"send_to","qualname":"::DataLinkSender::send_to","value":"pub fn send_to(&mut Self, &[u8], Option<NetworkInterface>)\n-> Option<io::Result<()>>","parent":{"krate":0,"index":390},"children":[],"decl_id":null,"docs":" Send a packet.","sig":null,"attributes":[{"value":"/ Send a packet.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5753,"byte_end":5771,"line_start":199,"line_end":199,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5776,"byte_end":5779,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ This may require an additional copy compared to `build_and_send`, depending on the","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5784,"byte_end":5870,"line_start":201,"line_end":201,"column_start":5,"column_end":91}},{"value":"/ operating system being used. The second parameter is currently ignored, however","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5875,"byte_end":5958,"line_start":202,"line_end":202,"column_start":5,"column_end":88}},{"value":"/ `None` should be passed.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5963,"byte_end":5991,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5996,"byte_end":6005,"line_start":204,"line_end":204,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":393},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6232,"byte_end":6248,"line_start":210,"line_end":210,"column_start":11,"column_end":27},"name":"DataLinkReceiver","qualname":"::DataLinkReceiver","value":"DataLinkReceiver: Send","parent":null,"children":[{"krate":0,"index":394}],"decl_id":null,"docs":" Structure for receiving packets at the data link layer. Should be constructed using\n `datalink_channel()`.\n","sig":null,"attributes":[{"value":"/ Structure for receiving packets at the data link layer. Should be constructed using","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6108,"byte_end":6195,"line_start":208,"line_end":208,"column_start":1,"column_end":88}},{"value":"/ `datalink_channel()`.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6196,"byte_end":6221,"line_start":209,"line_end":209,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6330,"byte_end":6334,"line_start":213,"line_end":213,"column_start":8,"column_end":12},"name":"next","qualname":"::DataLinkReceiver::next","value":"pub fn next(&mut Self) -> io::Result<&[u8]>","parent":{"krate":0,"index":393},"children":[],"decl_id":null,"docs":" Get the next ethernet frame in the channel.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6261,"byte_end":6270,"line_start":211,"line_end":211,"column_start":5,"column_end":14}},{"value":"/ Get the next ethernet frame in the channel.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6275,"byte_end":6322,"line_start":212,"line_end":212,"column_start":5,"column_end":52}}]},{"kind":"Struct","id":{"krate":0,"index":552},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6492,"byte_end":6508,"line_start":218,"line_end":218,"column_start":12,"column_end":28},"name":"NetworkInterface","qualname":"::NetworkInterface","value":"NetworkInterface { name, index, mac, ips, flags }","parent":null,"children":[{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" Represents a network interface and its associated addresses.\n","sig":null,"attributes":[{"value":"/ Represents a network interface and its associated addresses.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6371,"byte_end":6435,"line_start":216,"line_end":216,"column_start":1,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6554,"byte_end":6558,"line_start":220,"line_end":220,"column_start":9,"column_end":13},"name":"name","qualname":"::NetworkInterface::name","value":"std::string::String","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" The name of the interface.\n","sig":null,"attributes":[{"value":"/ The name of the interface.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6515,"byte_end":6545,"line_start":219,"line_end":219,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6633,"byte_end":6638,"line_start":222,"line_end":222,"column_start":9,"column_end":14},"name":"index","qualname":"::NetworkInterface::index","value":"u32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" The interface index (operating system specific).\n","sig":null,"attributes":[{"value":"/ The interface index (operating system specific).","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6572,"byte_end":6624,"line_start":221,"line_end":221,"column_start":5,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6694,"byte_end":6697,"line_start":224,"line_end":224,"column_start":9,"column_end":12},"name":"mac","qualname":"::NetworkInterface::mac","value":"std::option::Option<pnet_base::MacAddr>","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" A MAC address for the interface.\n","sig":null,"attributes":[{"value":"/ A MAC address for the interface.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6649,"byte_end":6685,"line_start":223,"line_end":223,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6777,"byte_end":6780,"line_start":226,"line_end":226,"column_start":9,"column_end":12},"name":"ips","qualname":"::NetworkInterface::ips","value":"std::vec::Vec<ipnetwork::IpNetwork>","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" IP addresses and netmasks for the interface.\n","sig":null,"attributes":[{"value":"/ IP addresses and netmasks for the interface.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6720,"byte_end":6768,"line_start":225,"line_end":225,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6865,"byte_end":6870,"line_start":228,"line_end":228,"column_start":9,"column_end":14},"name":"flags","qualname":"::NetworkInterface::flags","value":"u32","parent":{"krate":0,"index":552},"children":[],"decl_id":null,"docs":" Operating system specific flags for the interface.\n","sig":null,"attributes":[{"value":"/ Operating system specific flags for the interface.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6802,"byte_end":6856,"line_start":227,"line_end":227,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6979,"byte_end":6990,"line_start":233,"line_end":233,"column_start":12,"column_end":23},"name":"mac_address","qualname":"<NetworkInterface>::mac_address","value":"pub fn mac_address(&Self) -> MacAddr","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the MAC address associated with the interface.\n","sig":null,"attributes":[{"value":"/ Retrieve the MAC address associated with the interface.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6908,"byte_end":6967,"line_start":232,"line_end":232,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7059,"byte_end":7064,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"is_up","qualname":"<NetworkInterface>::is_up","value":"pub fn is_up(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7151,"byte_end":7163,"line_start":240,"line_end":240,"column_start":12,"column_end":24},"name":"is_broadcast","qualname":"<NetworkInterface>::is_broadcast","value":"pub fn is_broadcast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7304,"byte_end":7315,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"is_loopback","qualname":"<NetworkInterface>::is_loopback","value":"pub fn is_loopback(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Is the interface a loopback interface?\n","sig":null,"attributes":[{"value":"/ Is the interface a loopback interface?","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7250,"byte_end":7292,"line_start":243,"line_end":243,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7408,"byte_end":7425,"line_start":247,"line_end":247,"column_start":12,"column_end":29},"name":"is_point_to_point","qualname":"<NetworkInterface>::is_point_to_point","value":"pub fn is_point_to_point(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7521,"byte_end":7533,"line_start":250,"line_end":250,"column_start":12,"column_end":24},"name":"is_multicast","qualname":"<NetworkInterface>::is_multicast","value":"pub fn is_multicast(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":407},"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":9443,"byte_end":9453,"line_start":314,"line_end":314,"column_start":8,"column_end":18},"name":"interfaces","qualname":"::interfaces","value":"pub fn interfaces() -> Vec<NetworkInterface>","parent":null,"children":[],"decl_id":null,"docs":" Get a list of available network interfaces for the current machine.\n","sig":null,"attributes":[{"value":"/ Get a list of available network interfaces for the current machine.","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":9364,"byte_end":9435,"line_start":313,"line_end":313,"column_start":1,"column_end":72}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15667,"byte_end":15673,"line_start":53,"line_end":53,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16038,"byte_end":16044,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":121}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":21662,"byte_end":21680,"line_start":246,"line_end":246,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":134},{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":25602,"byte_end":25622,"line_start":341,"line_end":341,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":146}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15667,"byte_end":15673,"line_start":53,"line_end":53,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16038,"byte_end":16044,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":21662,"byte_end":21680,"line_start":246,"line_end":246,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":25602,"byte_end":25622,"line_start":341,"line_end":341,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":269}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34905,"byte_end":34911,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36435,"byte_end":36441,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36637,"byte_end":36643,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":364}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":37725,"byte_end":37743,"line_start":103,"line_end":103,"column_start":25,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":38662,"byte_end":38682,"line_start":133,"line_end":133,"column_start":27,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4087,"byte_end":4093,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6885,"byte_end":6901,"line_start":231,"line_end":231,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7648,"byte_end":7664,"line_start":255,"line_end":255,"column_start":30,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1283,"byte_end":1286,"line_start":55,"line_end":55,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":200}},{"kind":"Mod","span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":1444,"byte_end":1449,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":323}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15667,"byte_end":15673,"line_start":53,"line_end":53,"column_start":38,"column_end":44},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16038,"byte_end":16044,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":408},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":21662,"byte_end":21680,"line_start":246,"line_end":246,"column_start":25,"column_end":43},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":127},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":25602,"byte_end":25622,"line_start":341,"line_end":341,"column_start":27,"column_end":47},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":138},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":15667,"byte_end":15673,"line_start":53,"line_end":53,"column_start":38,"column_end":44},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":16038,"byte_end":16044,"line_start":65,"line_end":65,"column_start":18,"column_end":24},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":429},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":21662,"byte_end":21680,"line_start":246,"line_end":246,"column_start":25,"column_end":43},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":250},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/bpf.rs","byte_start":25602,"byte_end":25622,"line_start":341,"line_end":341,"column_start":27,"column_end":47},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":261},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":34905,"byte_end":34911,"line_start":30,"line_end":30,"column_start":6,"column_end":12},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":450},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36435,"byte_end":36441,"line_start":64,"line_end":64,"column_start":38,"column_end":44},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2738}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":36637,"byte_end":36643,"line_start":71,"line_end":71,"column_start":18,"column_end":24},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":450},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":37725,"byte_end":37743,"line_start":103,"line_end":103,"column_start":25,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":366},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/dummy.rs","byte_start":38662,"byte_end":38682,"line_start":133,"line_end":133,"column_start":27,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":371},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":4087,"byte_end":4093,"line_start":153,"line_end":153,"column_start":18,"column_end":24},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":529},"to":{"krate":2,"index":2810}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":5180,"byte_end":5184,"line_start":184,"line_end":184,"column_start":27,"column_end":31},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":390}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6250,"byte_end":6254,"line_start":210,"line_end":210,"column_start":29,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":2832},"to":{"krate":0,"index":393}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":6885,"byte_end":6901,"line_start":231,"line_end":231,"column_start":6,"column_end":22},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":552},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/ryojisimizu/.cargo/registry/src/github.com-1ecc6299db9ec823/pnet_datalink-0.23.1/src/lib.rs","byte_start":7648,"byte_end":7664,"line_start":255,"line_end":255,"column_start":30,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":552},"to":{"krate":2,"index":8812}}]}